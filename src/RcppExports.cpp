// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hills1
NumericMatrix hills1(NumericVector cv1, NumericVector cv2, double width1, double width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< double >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< double >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1p1
NumericMatrix hills1p1(NumericVector cv1, NumericVector cv2, double width1, double width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1p1(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< double >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< double >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1p1(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1p2
NumericMatrix hills1p2(NumericVector cv1, NumericVector cv2, double width1, double width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1p2(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< double >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< double >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1p2(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1p12
NumericMatrix hills1p12(NumericVector cv1, NumericVector cv2, double width1, double width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1p12(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< double >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< double >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1p12(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills2
NumericMatrix hills2(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills2(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills2(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills2p1
NumericMatrix hills2p1(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills2p1(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills2p1(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills2p2
NumericMatrix hills2p2(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills2p2(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills2p2(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills2p12
NumericMatrix hills2p12(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills2p12(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills2p12(cv1, cv2, width1, width2, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1d1
NumericVector hills1d1(NumericVector cv1, double width1, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1d1(SEXP cv1SEXP, SEXP width1SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< double >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1d1(cv1, width1, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1d1p
NumericVector hills1d1p(NumericVector cv1, double width1, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1d1p(SEXP cv1SEXP, SEXP width1SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< double >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1d1p(cv1, width1, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1d2
NumericVector hills1d2(NumericVector cv1, NumericVector width1, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1d2(SEXP cv1SEXP, SEXP width1SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1d2(cv1, width1, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// hills1d2p
NumericVector hills1d2p(NumericVector cv1, NumericVector width1, NumericVector heights, int n, int tmin, int tmax);
RcppExport SEXP _metadynminer_hills1d2p(SEXP cv1SEXP, SEXP width1SEXP, SEXP heightsSEXP, SEXP nSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(hills1d2p(cv1, width1, heights, n, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// fe2d
NumericVector fe2d(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, double x, double y, int tmin, int tmax);
RcppExport SEXP _metadynminer_fe2d(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP xSEXP, SEXP ySEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(fe2d(cv1, cv2, width1, width2, heights, x, y, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// fe2dp1
NumericVector fe2dp1(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, double x, double y, double p1, int tmin, int tmax);
RcppExport SEXP _metadynminer_fe2dp1(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP xSEXP, SEXP ySEXP, SEXP p1SEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(fe2dp1(cv1, cv2, width1, width2, heights, x, y, p1, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// fe2dp2
NumericVector fe2dp2(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, double x, double y, double p2, int tmin, int tmax);
RcppExport SEXP _metadynminer_fe2dp2(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP xSEXP, SEXP ySEXP, SEXP p2SEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(fe2dp2(cv1, cv2, width1, width2, heights, x, y, p2, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// fe2dp12
NumericVector fe2dp12(NumericVector cv1, NumericVector cv2, NumericVector width1, NumericVector width2, NumericVector heights, double x, double y, double p1, double p2, int tmin, int tmax);
RcppExport SEXP _metadynminer_fe2dp12(SEXP cv1SEXP, SEXP cv2SEXP, SEXP width1SEXP, SEXP width2SEXP, SEXP heightsSEXP, SEXP xSEXP, SEXP ySEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv2(cv2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width2(width2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(fe2dp12(cv1, cv2, width1, width2, heights, x, y, p1, p2, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// fe1d
NumericVector fe1d(NumericVector cv1, NumericVector width1, NumericVector heights, double x, int tmin, int tmax);
RcppExport SEXP _metadynminer_fe1d(SEXP cv1SEXP, SEXP width1SEXP, SEXP heightsSEXP, SEXP xSEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(fe1d(cv1, width1, heights, x, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}
// fe1dp
NumericVector fe1dp(NumericVector cv1, NumericVector width1, NumericVector heights, double x, double p1, int tmin, int tmax);
RcppExport SEXP _metadynminer_fe1dp(SEXP cv1SEXP, SEXP width1SEXP, SEXP heightsSEXP, SEXP xSEXP, SEXP p1SEXP, SEXP tminSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cv1(cv1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type width1(width1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type heights(heightsSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< int >::type tmin(tminSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(fe1dp(cv1, width1, heights, x, p1, tmin, tmax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_metadynminer_hills1", (DL_FUNC) &_metadynminer_hills1, 8},
    {"_metadynminer_hills1p1", (DL_FUNC) &_metadynminer_hills1p1, 8},
    {"_metadynminer_hills1p2", (DL_FUNC) &_metadynminer_hills1p2, 8},
    {"_metadynminer_hills1p12", (DL_FUNC) &_metadynminer_hills1p12, 8},
    {"_metadynminer_hills2", (DL_FUNC) &_metadynminer_hills2, 8},
    {"_metadynminer_hills2p1", (DL_FUNC) &_metadynminer_hills2p1, 8},
    {"_metadynminer_hills2p2", (DL_FUNC) &_metadynminer_hills2p2, 8},
    {"_metadynminer_hills2p12", (DL_FUNC) &_metadynminer_hills2p12, 8},
    {"_metadynminer_hills1d1", (DL_FUNC) &_metadynminer_hills1d1, 6},
    {"_metadynminer_hills1d1p", (DL_FUNC) &_metadynminer_hills1d1p, 6},
    {"_metadynminer_hills1d2", (DL_FUNC) &_metadynminer_hills1d2, 6},
    {"_metadynminer_hills1d2p", (DL_FUNC) &_metadynminer_hills1d2p, 6},
    {"_metadynminer_fe2d", (DL_FUNC) &_metadynminer_fe2d, 9},
    {"_metadynminer_fe2dp1", (DL_FUNC) &_metadynminer_fe2dp1, 10},
    {"_metadynminer_fe2dp2", (DL_FUNC) &_metadynminer_fe2dp2, 10},
    {"_metadynminer_fe2dp12", (DL_FUNC) &_metadynminer_fe2dp12, 11},
    {"_metadynminer_fe1d", (DL_FUNC) &_metadynminer_fe1d, 6},
    {"_metadynminer_fe1dp", (DL_FUNC) &_metadynminer_fe1dp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_metadynminer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
